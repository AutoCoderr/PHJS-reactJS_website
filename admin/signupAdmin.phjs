<?phjs
var errors = [];

if (typeof(PHJS.args.POST.prenom) == "undefined") {
	errors.push("Prenom non renseigné");
} else if (PHJS.args.POST.prenom.content == "") {
	errors.push("Prenom non renseigné");
}

if (typeof(PHJS.args.POST.nom) == "undefined") {
	errors.push("Nom non renseigné");
} else if (PHJS.args.POST.nom.content == "") {
	errors.push("Nom non renseigné");
}

if (typeof(PHJS.args.POST.age) == "undefined") {
	errors.push("Age non renseigné");
} else if (PHJS.args.POST.age.content == "") {
	errors.push("Age non renseigné");
}

if (typeof(PHJS.args.POST.password) == "undefined") {
	errors.push("Mot de passe non renseigné");
} else if (PHJS.args.POST.password.content == "") {
	errors.push("Mot de passe non renseigné");
}

if (typeof(PHJS.args.POST.token) == "undefined") {
	errors.push("Token non renseigné");
} else if (PHJS.args.POST.token.content == "") {
	errors.push("Token non renseigné");
}

if (errors.length == 0) {
	if (typeof(PHJS.global.sesssions) == "undefined") {
		PHJS.global.sesssions = [];
	}
	var perm = false;
	for (var i=0;i<PHJS.global.sessions.length;i++) {
		if (PHJS.args.POST.token.content == PHJS.global.sessions[i].token) {
			perm = PHJS.global.sessions[i].perm;
		}
	}

	if (perm == false) {
		echo_json ({rep: "failed", errors: ["Vous n'êtes pas connecté"]});
		--END--
	} else if (perm != "superadmin") {
		echo_json ({rep: "failed", errors: ["Vous n'avez pas les permissions nécéssaires"]});
		--END--
	} else {
		var Controleur = require(PHJS.cd+"/../controleur/controleur.js");
		var controleur = new Controleur();

		var prenom = PHJS.args.POST.prenom.content;
		var nom = PHJS.args.POST.nom.content;
		var metier = PHJS.args.POST.metier.content;
		var age = PHJS.args.POST.age.content;
		var password = PHJS.args.POST.password.content;

		controleur.signUp(prenom,nom,password,metier,age,"admin",function (error,result) {
			if (error) {
				echo_json({rep: "failed", errors: [error]});
			} else {
				if (result == "ALREADY_EXIST") {
					echo_json({rep: "failed", errors: ["Ce compte existe déjà"]});
				} else {
					echo_json({rep: "success"});
				}
			}
			--END--
		});
	}
} else {
	echo_json({rep: "failed", errors: errors});
	--END--
}
?>